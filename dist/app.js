(()=>{"use strict";const e=document.getElementById("toggle-weekly-btn"),t=document.querySelector(".weekly-box"),n=document.querySelector(".weekly"),o=document.querySelector(".city-input"),r=document.querySelector(".icon img"),a=document.getElementById("desc-html"),s=document.getElementById("temperature"),c=document.querySelector(".background"),i=document.getElementById("current-date");e.addEventListener("click",(()=>{e.querySelector("svg").classList.toggle("rotated"),t.classList.toggle("no-display")}));class l{constructor(e,t,n){this.date=e,this.day=e.split(" ")[0],this.dates=e.substring(4,10),this.temp=n,this.icon=t,this.appendDay(this.day,this.dates,this.icon,this.temp)}appendDay(e,o,r,a){const s=n.content.cloneNode(!0);s.querySelector("h3.day").textContent=`${e}`,s.querySelector("h3.dates").textContent=`${o}`,s.querySelector(".min-icon img").setAttribute("src",r),s.querySelector("h3.temp").textContent=`${a}℃`,t.appendChild(s)}}const u="AIzaSyAm0nnDFbVwnhj65IOPqw2D__m70gcEP-g";function d(e,t){switch(!0){case e>=200&&e<300:return"./icons/thunderstorm.png";case e>=300&&e<400||e>=500&&e<600:return t?"./icons/rain-day.png":"./icons/rain-night.png";case e>=600&&e<700:return"./icons/snow.png";case e>=700&&e<=762:return"./icons/fog.png";case 800===e:return t?"./icons/clear-day.png":"./icons/clear-night.png";case e>800&&e<900:return t?"./icons/cloudy-day.png":"./icons/cloudy-night.png";default:return"./icons/clear-day.png"}}const g=document.querySelector(".city-input");let m=document.getElementById("city-list");function p(e,n){const u=n.current.weather[0].description,g=(n.current.weather[0].main,Math.round(n.current.temp)),m=n.current.dt,p=n.current.sunset;let y=!(n.current.sunrise>m||m>p);!function(e,n,l,u,d,g){if(t.children.length>1)for(let e=0;e<8;e++)t.querySelector(".day-row").remove();g?g&&c.classList.contains("night")&&c.classList.remove("night"):c.classList.add("night"),o.value=e,r.setAttribute("src",u),a.textContent=n.toUpperCase(),s.textContent=`${d}℃`;const m=(new Date).toDateString();i.textContent=m}(e,u,0,d(n.current.weather[0].id,y),g,y),n.daily.forEach((e=>{const t=(n=e.dt,new Date(1e3*n).toDateString());var n;const o=Math.round(e.temp.day),r=d(e.weather[0].id,!0);new l(t,r,o)}))}async function y(e){const t=e.lat,n=e.lng,o=await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${t}&lon=${n}&exclude=minutely,hourly,alerts&units=metric&appid=7899365eb731d9029680a0fb8a81586e`);if(!o.ok)throw new Error("Request failed. Try again.");const r=await o.json();if(r.error_message)throw new Error(r.error_message);return r}window.onload=()=>{localStorage.getItem("cities")&&JSON.parse(localStorage.getItem("cities")).forEach((e=>{let t=document.createElement("option");t.setAttribute("value",`${e}`),m.appendChild(t)})),navigator.geolocation?navigator.geolocation.getCurrentPosition((async e=>{const t={lat:e.coords.latitude,lng:e.coords.longitude},n=await y(t);c.classList.remove("filter-backgr"),p(await async function(e){const t=await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${e.lat},${e.lng}&key=${u}`);if(!t.ok)throw new Error("Request failed. Try again.");const n=await t.json();if(n.error_message)throw new Error(n.error_message);return n.plus_code.compound_code.split(",")[0].split(" ")[1]}(t),n)}),(e=>{alert("Couldn't get your location.")})):alert("Location feature is not available in your browser. Please use a more modern browser or enter address manually.")},g.onchange=()=>{let e=g.value;if(localStorage.getItem("cities")){const t=JSON.parse(localStorage.getItem("cities"));if(-1!==t.indexOf(e))return;{t.push(e),localStorage.setItem("cities",JSON.stringify(t));let n=document.createElement("option");n.setAttribute("value",`${e}`),m.appendChild(n)}}else{const t=[];t.push(e),localStorage.setItem("cities",JSON.stringify(t));let n=document.createElement("option");n.setAttribute("value",`${e}`),m.appendChild(n)}},g.onsearch=async function(){const e=g.value,t=await async function(e){const t=encodeURI(e),n=await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${t}&key=${u}`);if(!n.ok)throw new Error("Request failed. Try again.");const o=await n.json();if(o.error_message)throw new Error(o.error_message);return o.results[0].geometry.location}(e);p(e,await y(t))}})();